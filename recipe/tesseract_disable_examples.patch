diff --git a/tesseract_collision/CMakeLists.txt b/tesseract_collision/CMakeLists.txt
index cba176b37f..1b908ccd96 100644
--- a/tesseract_collision/CMakeLists.txt
+++ b/tesseract_collision/CMakeLists.txt
@@ -113,7 +113,7 @@ endif()
 
 # Examples
 if(TESSERACT_BUILD_FCL)
-  add_subdirectory(examples)
+  # add_subdirectory(examples)
 endif()
 
 configure_package(NAMESPACE tesseract)
diff --git a/tesseract_collision/bullet/CMakeLists.txt b/tesseract_collision/bullet/CMakeLists.txt
index 21f232ab2b..9087f4a3ef 100644
--- a/tesseract_collision/bullet/CMakeLists.txt
+++ b/tesseract_collision/bullet/CMakeLists.txt
@@ -27,10 +27,10 @@ else()
   set(BULLET_LIBRARY_DIRS_ABS ${BULLET_LIBRARY_DIRS})
 endif()
 
-if(WIN32) # This was required for windows to find things in tesseract_ext before the system which is an issue in ros-win
+#if(WIN32) # This was required for windows to find things in tesseract_ext before the system which is an issue in ros-win
   include_directories(BEFORE "${BULLET_INCLUDE_DIRS_ABS}")
   link_directories(BEFORE "${BULLET_LIBRARY_DIRS_ABS}")
-endif()
+#endif()
 
 find_library(HACD_LIBRARY HACD HINTS ${BULLET_LIBRARY_DIRS_ABS})
 if(NOT HACD_LIBRARY)
diff --git a/tesseract_collision/bullet/src/bullet_cast_simple_manager.cpp b/tesseract_collision/bullet/src/bullet_cast_simple_manager.cpp
index 3004af45d4..8ab5b20b6c 100644
--- a/tesseract_collision/bullet/src/bullet_cast_simple_manager.cpp
+++ b/tesseract_collision/bullet/src/bullet_cast_simple_manager.cpp
@@ -134,7 +134,9 @@ bool BulletCastSimpleManager::removeCollisionObject(const std::string& name)
   auto it = link2cow_.find(name);
   if (it != link2cow_.end())
   {
-    cows_.erase(std::find(cows_.begin(), cows_.end(), it->second));
+    cows_.erase(std::find_if(cows_.begin(), cows_.end(), [&name](const auto& p) {
+      return p->getName() == name;
+    }));
     collision_objects_.erase(std::find(collision_objects_.begin(), collision_objects_.end(), name));
     link2cow_.erase(name);
     link2castcow_.erase(name);
diff --git a/tesseract_collision/cmake/tesseract_collision-config.cmake.in b/tesseract_collision/cmake/tesseract_collision-config.cmake.in
index 2467109d72..5a186e46d2 100644
--- a/tesseract_collision/cmake/tesseract_collision-config.cmake.in
+++ b/tesseract_collision/cmake/tesseract_collision-config.cmake.in
@@ -32,10 +32,10 @@ IF(NOT ${BULLET_DEFINITIONS} MATCHES ".*-DBT_USE_DOUBLE_PRECISION.*")
   message(WARNING "Bullet does not appear to be build with double precision, current definitions: ${BULLET_DEFINITIONS}")
 endif()
 
-if (WIN32) # This was required for windows to find things in tesseract_ext before the system which is an issue in ros-win
+#if (WIN32) # This was required for windows to find things in tesseract_ext before the system which is an issue in ros-win
   include_directories(BEFORE "${BULLET_ROOT_DIR}/${BULLET_INCLUDE_DIRS}")
   link_directories(BEFORE "${BULLET_ROOT_DIR}/${BULLET_LIBRARY_DIRS}")
-endif()
+#endif()
 
 if(NOT TARGET console_bridge::console_bridge)
   add_library(console_bridge::console_bridge INTERFACE IMPORTED)
diff --git a/tesseract_collision/vhacd/CMakeLists.txt b/tesseract_collision/vhacd/CMakeLists.txt
index 14af2a81b5..1d377b10a6 100644
--- a/tesseract_collision/vhacd/CMakeLists.txt
+++ b/tesseract_collision/vhacd/CMakeLists.txt
@@ -12,10 +12,10 @@ if(NOT
     WARNING "Bullet does not appear to be build with double precision, current definitions: ${BULLET_DEFINITIONS}")
 endif()
 
-if(WIN32) # This was required for windows to find things in tesseract_ext before the system which is an issue in ros-win
+#if(WIN32) # This was required for windows to find things in tesseract_ext before the system which is an issue in ros-win
   include_directories(BEFORE "${BULLET_ROOT_DIR}/${BULLET_INCLUDE_DIRS}")
   link_directories(BEFORE "${BULLET_ROOT_DIR}/${BULLET_LIBRARY_DIRS}")
-endif()
+#endif()
 
 # Third party vhacd
 include("${CMAKE_CURRENT_SOURCE_DIR}/../cmake/vhacd_common.cmake")
diff --git a/tesseract_geometry/CMakeLists.txt b/tesseract_geometry/CMakeLists.txt
index e77ef5a917..efd55cf918 100644
--- a/tesseract_geometry/CMakeLists.txt
+++ b/tesseract_geometry/CMakeLists.txt
@@ -99,7 +99,7 @@ install(
 install(FILES "${CMAKE_CURRENT_LIST_DIR}/cmake/Findassimp.cmake" DESTINATION lib/cmake/${PROJECT_NAME})
 
 # ADD Examples
-add_subdirectory(examples)
+# add_subdirectory(examples)
 
 if(TESSERACT_ENABLE_TESTING)
   enable_testing()
diff --git a/tesseract_scene_graph/CMakeLists.txt b/tesseract_scene_graph/CMakeLists.txt
index 4c21318d9a..fb0f641835 100644
--- a/tesseract_scene_graph/CMakeLists.txt
+++ b/tesseract_scene_graph/CMakeLists.txt
@@ -79,7 +79,7 @@ install(
   PATTERN ".svn" EXCLUDE)
 
 # ADD Examples
-add_subdirectory(examples)
+# add_subdirectory(examples)
 
 if(TESSERACT_ENABLE_TESTING)
   enable_testing()
diff --git a/tesseract_srdf/CMakeLists.txt b/tesseract_srdf/CMakeLists.txt
index 809b73ae30..decc78475e 100644
--- a/tesseract_srdf/CMakeLists.txt
+++ b/tesseract_srdf/CMakeLists.txt
@@ -80,7 +80,7 @@ install(FILES include/${PROJECT_NAME}/srdf_model.h include/${PROJECT_NAME}/kinem
               include/${PROJECT_NAME}/utils.h DESTINATION include/${PROJECT_NAME})
 
 # ADD Examples
-add_subdirectory(examples)
+# add_subdirectory(examples)
 
 if(TESSERACT_ENABLE_TESTING)
   enable_testing()
diff --git a/tesseract_urdf/CMakeLists.txt b/tesseract_urdf/CMakeLists.txt
index d23e68e1d4..3ec7c8164a 100644
--- a/tesseract_urdf/CMakeLists.txt
+++ b/tesseract_urdf/CMakeLists.txt
@@ -12,7 +12,7 @@ endif()
 find_package(Boost REQUIRED)
 find_package(Eigen3 REQUIRED)
 find_package(console_bridge REQUIRED)
-find_package(PCL REQUIRED)
+find_package(PCL REQUIRED COMPONENTS common io)
 find_package(tesseract_geometry REQUIRED)
 find_package(tesseract_common REQUIRED)
 find_package(tesseract_scene_graph REQUIRED)
@@ -101,7 +101,7 @@ else(TESSERACT_Boost_VERSION_MACRO ${Boost_VERSION_MACRO})
   set(TESSERACT_Boost_VERSION_MACRO ${Boost_VERSION})
 endif()
 if(TESSERACT_Boost_VERSION_MACRO VERSION_GREATER "106000")
-  target_link_libraries(${PROJECT_NAME} PUBLIC ${PCL_LIBRARIES})
+  target_link_libraries(${PROJECT_NAME} PUBLIC ${PCL_IO_LIBRARIES} ${PCL_COMMON_LIBRARIES})
   target_compile_definitions(${PROJECT_NAME} PUBLIC TESSERACT_PARSE_POINT_CLOUDS="ON")
   foreach(DEF ${PCL_DEFINITIONS})
     string(STRIP ${DEF} DEF)
@@ -128,7 +128,7 @@ if(TESSERACT_Boost_VERSION_MACRO VERSION_GREATER "106000")
       endif()
     endif()
   endforeach()
-  target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ${PCL_INCLUDE_DIRS})
+  #target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ${PCL_INCLUDE_DIRS})
 endif()
 
 target_include_directories(${PROJECT_NAME} PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>"
@@ -141,7 +141,7 @@ install(FILES include/${PROJECT_NAME}/urdf_parser.h DESTINATION include/${PROJEC
 install(FILES include/${PROJECT_NAME}/utils.h DESTINATION include/${PROJECT_NAME})
 
 # ADD Examples
-add_subdirectory(examples)
+# add_subdirectory(examples)
 
 if(TESSERACT_ENABLE_TESTING)
   enable_testing()
diff --git a/tesseract_urdf/cmake/tesseract_urdf-config.cmake.in b/tesseract_urdf/cmake/tesseract_urdf-config.cmake.in
index 583b413a37..ee18466f82 100644
--- a/tesseract_urdf/cmake/tesseract_urdf-config.cmake.in
+++ b/tesseract_urdf/cmake/tesseract_urdf-config.cmake.in
@@ -12,7 +12,7 @@ else()
 endif()
 find_dependency(Eigen3)
 find_dependency(console_bridge)
-find_dependency(PCL)
+find_package(PCL COMPONENTS common io)
 find_dependency(tesseract_geometry)
 find_dependency(tesseract_common)
 find_dependency(tesseract_scene_graph)
