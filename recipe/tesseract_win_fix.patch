diff --git a/tesseract_common/cmake/FindLZMA.cmake b/tesseract_common/cmake/FindLZMA.cmake
new file mode 100644
index 0000000000..95bfdcc66d
--- /dev/null
+++ b/tesseract_common/cmake/FindLZMA.cmake
@@ -0,0 +1,41 @@
+find_path(LZMA_INCLUDE_DIR
+  NAMES lzma.h
+  DOC "lzma include directory")
+find_library(LZMA_LIBRARY
+  NAMES liblzma
+  DOC "lzma library")
+
+if (LZMA_INCLUDE_DIR)
+  file(STRINGS "${LZMA_INCLUDE_DIR}/lzma/version.h" _lzma_version_lines
+    REGEX "#define[ \t]+LZMA_VERSION_(MAJOR|MINOR|PATCH)")
+  string(REGEX REPLACE ".*LZMA_VERSION_MAJOR *\([0-9]*\).*" "\\1" _lzma_version_major "${_lzma_version_lines}")
+  string(REGEX REPLACE ".*LZMA_VERSION_MINOR *\([0-9]*\).*" "\\1" _lzma_version_minor "${_lzma_version_lines}")
+  string(REGEX REPLACE ".*LZMA_VERSION_PATCH *\([0-9]*\).*" "\\1" _lzma_version_patch "${_lzma_version_lines}")
+  set(LZMA_VERSION "${_lzma_version_major}.${_lzma_version_minor}.${_lzma_version_patch}")
+  unset(_lzma_version_major)
+  unset(_lzma_version_minor)
+  unset(_lzma_version_patch)
+  unset(_lzma_version_lines)
+endif ()
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(LZMA
+  REQUIRED_VARS LZMA_LIBRARY LZMA_INCLUDE_DIR
+  VERSION_VAR LZMA_VERSION)
+
+if (LZMA_FOUND)
+  set(LZMA_LIBRARIES "${LZMA_LIBRARY}")
+  set(LZMA_INCLUDE_DIRS "${LZMA_INCLUDE_DIR}")
+
+  if (NOT TARGET LZMA::LZMA)
+    include(vtkDetectLibraryType)
+    vtk_detect_library_type(lzma_library_type
+      PATH "${LZMA_LIBRARY}")
+    add_library(LZMA::LZMA "${lzma_library_type}" IMPORTED)
+    unset(lzma_library_type)
+    set_target_properties(LZMA::LZMA PROPERTIES
+      IMPORTED_LOCATION "${LZMA_LIBRARY}"
+      IMPORTED_IMPLIB "${LZMA_LIBRARY}"
+      INTERFACE_INCLUDE_DIRECTORIES "${LZMA_INCLUDE_DIR}")
+  endif ()
+endif ()
diff --git a/tesseract_environment/CMakeLists.txt b/tesseract_environment/CMakeLists.txt
index 80a39166dc..a46db7ac09 100644
--- a/tesseract_environment/CMakeLists.txt
+++ b/tesseract_environment/CMakeLists.txt
@@ -3,7 +3,7 @@ cmake_minimum_required(VERSION 3.5.0)
 # Extract package name and version
 find_package(ros_industrial_cmake_boilerplate REQUIRED)
 extract_package_metadata(pkg)
-project(${pkg_extracted_name} VERSION ${pkg_extracted_version} LANGUAGES CXX)
+project(${pkg_extracted_name} VERSION ${pkg_extracted_version} LANGUAGES CXX C)
 
 if(WIN32)
   set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
diff --git a/tesseract_environment/include/tesseract_environment/core/command.h b/tesseract_environment/include/tesseract_environment/core/command.h
index 4e82c0fe5d..a127039380 100644
--- a/tesseract_environment/include/tesseract_environment/core/command.h
+++ b/tesseract_environment/include/tesseract_environment/core/command.h
@@ -55,10 +55,8 @@ enum class CommandType
   CHANGE_JOINT_VELOCITY_LIMITS = 14,
   CHANGE_JOINT_ACCELERATION_LIMITS = 15,
   ADD_KINEMATICS_INFORMATION = 16,
-  CHANGE_DEFAULT_CONTACT_MARGIN = 17,
-  CHANGE_PAIR_CONTACT_MARGIN = 18,
-  REPLACE_JOINT = 19,
-  CHANGE_COLLISION_MARGINS = 20
+  REPLACE_JOINT = 17,
+  CHANGE_COLLISION_MARGINS = 18
 };
 
 class Command
diff --git a/tesseract_environment/include/tesseract_environment/core/commands.h b/tesseract_environment/include/tesseract_environment/core/commands.h
index 1cacfa817a..9b913eef06 100644
--- a/tesseract_environment/include/tesseract_environment/core/commands.h
+++ b/tesseract_environment/include/tesseract_environment/core/commands.h
@@ -32,7 +32,6 @@
 #include <tesseract_environment/core/commands/add_link_command.h>
 #include <tesseract_environment/core/commands/add_kinematics_information_command.h>
 #include <tesseract_environment/core/commands/add_scene_graph_command.h>
-#include <tesseract_environment/core/commands/change_default_contact_margin_command.h>
 #include <tesseract_environment/core/commands/change_joint_acceleration_limits_command.h>
 #include <tesseract_environment/core/commands/change_joint_origin_command.h>
 #include <tesseract_environment/core/commands/change_joint_position_limits_command.h>
@@ -40,7 +39,6 @@
 #include <tesseract_environment/core/commands/change_link_collision_enabled_command.h>
 #include <tesseract_environment/core/commands/change_link_origin_command.h>
 #include <tesseract_environment/core/commands/change_link_visibility_command.h>
-#include <tesseract_environment/core/commands/change_pair_contact_margin_command.h>
 #include <tesseract_environment/core/commands/move_joint_command.h>
 #include <tesseract_environment/core/commands/move_link_command.h>
 #include <tesseract_environment/core/commands/remove_allowed_collision_command.h>
@@ -72,8 +70,6 @@
 %shared_ptr(tesseract_environment::ChangeJointPositionLimitsCommand)
 %shared_ptr(tesseract_environment::ChangeJointVelocityLimitsCommand)
 %shared_ptr(tesseract_environment::ChangeJointAccelerationLimitsCommand)
-%shared_ptr(tesseract_environment::ChangeDefaultContactMarginCommand)
-%shared_ptr(tesseract_environment::ChangePairContactMarginCommand)
 %shared_ptr(tesseract_environment::ChangeCollisionMarginsCommand)
 
 %shared_factory(
@@ -96,8 +92,6 @@
   tesseract_environment::ChangeJointPositionLimitsCommand,
   tesseract_environment::ChangeJointVelocityLimitsCommand,
   tesseract_environment::ChangeJointAccelerationLimitsCommand,
-  tesseract_environment::ChangeDefaultContactMarginCommand,
-  tesseract_environment::ChangePairContactMarginCommand,
   tesseract_environment::ChangeCollisionMarginsCommand
 )
 
diff --git a/tesseract_environment/include/tesseract_environment/core/commands/change_default_contact_margin_command.h b/tesseract_environment/include/tesseract_environment/core/commands/change_default_contact_margin_command.h
deleted file mode 100644
index acb345efb8..0000000000
--- a/tesseract_environment/include/tesseract_environment/core/commands/change_default_contact_margin_command.h
+++ /dev/null
@@ -1,56 +0,0 @@
-/**
- * @file change_default_contact_margin_command.h
- * @brief Used to change default contact margin in environment
- *
- * @author Levi Armstrong
- * @date Dec 18, 2017
- * @version TODO
- * @bug No known bugs
- *
- * @copyright Copyright (c) 2017, Southwest Research Institute
- *
- * @par License
- * Software License Agreement (Apache License)
- * @par
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * http://www.apache.org/licenses/LICENSE-2.0
- * @par
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#ifndef TESSERACT_ENVIRONMENT_CHANGE_DEFAULT_CONTACT_MARGIN_COMMAND_H
-#define TESSERACT_ENVIRONMENT_CHANGE_DEFAULT_CONTACT_MARGIN_COMMAND_H
-
-#include <tesseract_common/macros.h>
-TESSERACT_COMMON_IGNORE_WARNINGS_PUSH
-#include <memory>
-#include <unordered_map>
-TESSERACT_COMMON_IGNORE_WARNINGS_POP
-
-#include <tesseract_environment/core/command.h>
-
-namespace tesseract_environment
-{
-DEPRECATED("Please use ChangeCollisionMarginsCommand going forward.")
-class ChangeDefaultContactMarginCommand : public Command
-{
-public:
-  using Ptr = std::shared_ptr<ChangeDefaultContactMarginCommand>;
-  using ConstPtr = std::shared_ptr<const ChangeDefaultContactMarginCommand>;
-
-  ChangeDefaultContactMarginCommand(double default_margin) : default_margin_(default_margin) {}
-
-  CommandType getType() const final { return CommandType::CHANGE_DEFAULT_CONTACT_MARGIN; }
-  double getDefaultCollisionMargin() const { return default_margin_; }
-
-private:
-  double default_margin_{ 0 };
-};
-}  // namespace tesseract_environment
-
-#endif  // TESSERACT_ENVIRONMENT_CHANGE_DEFAULT_CONTACT_MARGIN_COMMAND_H
diff --git a/tesseract_environment/include/tesseract_environment/core/commands/change_pair_contact_margin_command.h b/tesseract_environment/include/tesseract_environment/core/commands/change_pair_contact_margin_command.h
deleted file mode 100644
index 6b5b97f129..0000000000
--- a/tesseract_environment/include/tesseract_environment/core/commands/change_pair_contact_margin_command.h
+++ /dev/null
@@ -1,66 +0,0 @@
-/**
- * @file change_pair_contact_margin_command.h
- * @brief Used to change pair contact margin in environment
- *
- * @author Levi Armstrong
- * @date Dec 18, 2017
- * @version TODO
- * @bug No known bugs
- *
- * @copyright Copyright (c) 2017, Southwest Research Institute
- *
- * @par License
- * Software License Agreement (Apache License)
- * @par
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * http://www.apache.org/licenses/LICENSE-2.0
- * @par
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#ifndef TESSERACT_ENVIRONMENT_CHANGE_PAIR_CONTACT_MARGIN_COMMAND_H
-#define TESSERACT_ENVIRONMENT_CHANGE_PAIR_CONTACT_MARGIN_COMMAND_H
-
-#include <tesseract_common/macros.h>
-TESSERACT_COMMON_IGNORE_WARNINGS_PUSH
-#include <memory>
-#include <unordered_map>
-TESSERACT_COMMON_IGNORE_WARNINGS_POP
-
-#include <tesseract_environment/core/command.h>
-#include <tesseract_common/types.h>
-
-namespace tesseract_environment
-{
-DEPRECATED("Please use ChangeCollisionMarginsCommand going forward.")
-class ChangePairContactMarginCommand : public Command
-{
-public:
-  using Ptr = std::shared_ptr<ChangePairContactMarginCommand>;
-  using ConstPtr = std::shared_ptr<const ChangePairContactMarginCommand>;
-
-  ChangePairContactMarginCommand(
-      std::unordered_map<tesseract_common::LinkNamesPair, double, tesseract_common::PairHash> link_pair_margin)
-    : link_pair_margin_(std::move(link_pair_margin))
-  {
-  }
-
-  CommandType getType() const final { return CommandType::CHANGE_PAIR_CONTACT_MARGIN; }
-
-  const std::unordered_map<tesseract_common::LinkNamesPair, double, tesseract_common::PairHash>&
-  getPairCollisionMarginData() const
-  {
-    return link_pair_margin_;
-  }
-
-private:
-  std::unordered_map<tesseract_common::LinkNamesPair, double, tesseract_common::PairHash> link_pair_margin_;
-};
-}  // namespace tesseract_environment
-
-#endif  // TESSERACT_ENVIRONMENT_CHANGE_PAIR_CONTACT_MARGIN_COMMAND_H
diff --git a/tesseract_environment/include/tesseract_environment/core/environment.h b/tesseract_environment/include/tesseract_environment/core/environment.h
index 13bca9d899..994f80d8f8 100644
--- a/tesseract_environment/include/tesseract_environment/core/environment.h
+++ b/tesseract_environment/include/tesseract_environment/core/environment.h
@@ -30,6 +30,7 @@ TESSERACT_COMMON_IGNORE_WARNINGS_PUSH
 #include <vector>
 #include <string>
 #include <shared_mutex>
+#include <chrono>
 #include <console_bridge/console.h>
 TESSERACT_COMMON_IGNORE_WARNINGS_POP
 
@@ -381,6 +382,9 @@ public:
   /** @brief Get the current state of the environment */
   virtual EnvState::ConstPtr getCurrentState() const;
 
+  /** @brief Get the current state timestamp */
+  virtual std::chrono::high_resolution_clock::duration getCurrentStateTimestamp() const;
+
   /**
    * @brief Get a link in the environment
    * @param name The name of the link
@@ -738,15 +742,16 @@ protected:
   int revision_{ 0 };         /**< This increments when the scene graph is modified */
   int init_revision_{ 0 };    /**< This is the revision number after initialization used when reset is called */
   Commands commands_;         /**< The history of commands applied to the environment after intialization */
-  tesseract_scene_graph::SceneGraph::Ptr scene_graph_;            /**< Tesseract Scene Graph */
-  tesseract_scene_graph::SceneGraph::ConstPtr scene_graph_const_; /**< Tesseract Scene Graph Const */
-  ManipulatorManager::Ptr manipulator_manager_;                   /**< Managers for the kinematics objects */
-  EnvState::Ptr current_state_;                                   /**< Current state of the environment */
-  StateSolver::Ptr state_solver_;                                 /**< Tesseract State Solver */
-  std::vector<std::string> link_names_;                           /**< A vector of link names */
-  std::vector<std::string> joint_names_;                          /**< A vector of joint names */
-  std::vector<std::string> active_link_names_;                    /**< A vector of active link names */
-  std::vector<std::string> active_joint_names_;                   /**< A vector of active joint names */
+  tesseract_scene_graph::SceneGraph::Ptr scene_graph_;                   /**< Tesseract Scene Graph */
+  tesseract_scene_graph::SceneGraph::ConstPtr scene_graph_const_;        /**< Tesseract Scene Graph Const */
+  ManipulatorManager::Ptr manipulator_manager_;                          /**< Managers for the kinematics objects */
+  EnvState::Ptr current_state_;                                          /**< Current state of the environment */
+  std::chrono::high_resolution_clock::duration current_state_timestamp_; /**< Current state timestamp */
+  StateSolver::Ptr state_solver_;                                        /**< Tesseract State Solver */
+  std::vector<std::string> link_names_;                                  /**< A vector of link names */
+  std::vector<std::string> joint_names_;                                 /**< A vector of joint names */
+  std::vector<std::string> active_link_names_;                           /**< A vector of active link names */
+  std::vector<std::string> active_joint_names_;                          /**< A vector of active joint names */
   tesseract_collision::IsContactAllowedFn is_contact_allowed_fn_; /**< The function used to determine if two objects are
                                                                      allowed in collision */
 
@@ -816,8 +821,6 @@ private:
   bool applyChangeJointVelocityLimitsCommand(const ChangeJointVelocityLimitsCommand::ConstPtr& cmd);
   bool applyChangeJointAccelerationLimitsCommand(const ChangeJointAccelerationLimitsCommand::ConstPtr& cmd);
   bool applyAddKinematicsInformationCommand(const AddKinematicsInformationCommand::ConstPtr& cmd);
-  bool applyChangeDefaultContactMarginCommand(const ChangeDefaultContactMarginCommand::ConstPtr& cmd);
-  bool applyChangePairContactMarginCommand(const ChangePairContactMarginCommand::ConstPtr& cmd);
   bool applyChangeCollisionMarginsCommand(const ChangeCollisionMarginsCommand::ConstPtr& cmd);
 };
 }  // namespace tesseract_environment
diff --git a/tesseract_environment/src/core/environment.cpp b/tesseract_environment/src/core/environment.cpp
index 93a64143c7..9bbbdc5c19 100644
--- a/tesseract_environment/src/core/environment.cpp
+++ b/tesseract_environment/src/core/environment.cpp
@@ -332,6 +332,12 @@ EnvState::ConstPtr Environment::getCurrentState() const
   return current_state_;
 }
 
+std::chrono::high_resolution_clock::duration Environment::getCurrentStateTimestamp() const
+{
+  std::shared_lock<std::shared_mutex> lock(mutex_);
+  return current_state_timestamp_;
+}
+
 tesseract_scene_graph::Link::ConstPtr Environment::getLink(const std::string& name) const
 {
   std::shared_lock<std::shared_mutex> lock(mutex_);
@@ -676,6 +682,7 @@ void Environment::getCollisionObject(tesseract_collision::CollisionShapesConst&
 
 void Environment::currentStateChanged()
 {
+  current_state_timestamp_ = std::chrono::high_resolution_clock::now().time_since_epoch();
   current_state_ = std::make_shared<EnvState>(*(state_solver_->getCurrentState()));
   if (discrete_manager_ != nullptr)
     discrete_manager_->setCollisionObjectsTransform(current_state_->link_transforms);
@@ -936,18 +943,6 @@ bool Environment::applyCommandsHelper(const Commands& commands)
         success &= applyAddKinematicsInformationCommand(cmd);
         break;
       }
-      case tesseract_environment::CommandType::CHANGE_DEFAULT_CONTACT_MARGIN:
-      {
-        auto cmd = std::static_pointer_cast<const ChangeDefaultContactMarginCommand>(command);
-        success &= applyChangeDefaultContactMarginCommand(cmd);
-        break;
-      }
-      case tesseract_environment::CommandType::CHANGE_PAIR_CONTACT_MARGIN:
-      {
-        auto cmd = std::static_pointer_cast<const ChangePairContactMarginCommand>(command);
-        success &= applyChangePairContactMarginCommand(cmd);
-        break;
-      }
       case tesseract_environment::CommandType::CHANGE_COLLISION_MARGINS:
       {
         auto cmd = std::static_pointer_cast<const ChangeCollisionMarginsCommand>(command);
@@ -1569,39 +1564,6 @@ bool Environment::applyAddKinematicsInformationCommand(const AddKinematicsInform
   return true;
 }
 
-bool Environment::applyChangeDefaultContactMarginCommand(const ChangeDefaultContactMarginCommand::ConstPtr& cmd)
-{
-  collision_margin_data_.setDefaultCollisionMargin(cmd->getDefaultCollisionMargin());
-
-  if (continuous_manager_ != nullptr)
-    continuous_manager_->setDefaultCollisionMarginData(cmd->getDefaultCollisionMargin());
-
-  if (discrete_manager_ != nullptr)
-    discrete_manager_->setDefaultCollisionMarginData(cmd->getDefaultCollisionMargin());
-
-  ++revision_;
-  commands_.push_back(cmd);
-
-  return true;
-}
-
-bool Environment::applyChangePairContactMarginCommand(const ChangePairContactMarginCommand::ConstPtr& cmd)
-{
-  for (const auto& link_pair : cmd->getPairCollisionMarginData())
-    collision_margin_data_.setPairCollisionMargin(link_pair.first.first, link_pair.first.second, link_pair.second);
-
-  if (continuous_manager_ != nullptr)
-    continuous_manager_->setCollisionMarginData(collision_margin_data_);
-
-  if (discrete_manager_ != nullptr)
-    discrete_manager_->setCollisionMarginData(collision_margin_data_);
-
-  ++revision_;
-  commands_.push_back(cmd);
-
-  return true;
-}
-
 bool Environment::applyChangeCollisionMarginsCommand(const ChangeCollisionMarginsCommand::ConstPtr& cmd)
 {
   collision_margin_data_.apply(cmd->getCollisionMarginData(), cmd->getCollisionMarginOverrideType());
diff --git a/tesseract_environment/src/core/manipulator_manager.cpp b/tesseract_environment/src/core/manipulator_manager.cpp
index 32dd191aa7..c4e600b96d 100644
--- a/tesseract_environment/src/core/manipulator_manager.cpp
+++ b/tesseract_environment/src/core/manipulator_manager.cpp
@@ -204,8 +204,7 @@ void ManipulatorManager::onEnvironmentChanged(const Commands& commands)
       case CommandType::CHANGE_LINK_COLLISION_ENABLED:
       case CommandType::ADD_ALLOWED_COLLISION:
       case CommandType::REMOVE_ALLOWED_COLLISION_LINK:
-      case CommandType::CHANGE_DEFAULT_CONTACT_MARGIN:
-      case CommandType::CHANGE_PAIR_CONTACT_MARGIN:
+      case CommandType::CHANGE_COLLISION_MARGINS:
       {
         break;
       }
diff --git a/tesseract_environment/src/ofkt/ofkt_state_solver.cpp b/tesseract_environment/src/ofkt/ofkt_state_solver.cpp
index faccf6f2a5..5ccacc9622 100644
--- a/tesseract_environment/src/ofkt/ofkt_state_solver.cpp
+++ b/tesseract_environment/src/ofkt/ofkt_state_solver.cpp
@@ -456,8 +456,6 @@ void OFKTStateSolver::onEnvironmentChanged(const Commands& commands)
       }
       case tesseract_environment::CommandType::CHANGE_JOINT_VELOCITY_LIMITS:
       case tesseract_environment::CommandType::CHANGE_JOINT_ACCELERATION_LIMITS:
-      case tesseract_environment::CommandType::CHANGE_DEFAULT_CONTACT_MARGIN:
-      case tesseract_environment::CommandType::CHANGE_PAIR_CONTACT_MARGIN:
       case tesseract_environment::CommandType::CHANGE_COLLISION_MARGINS:
       {
         break;
diff --git a/tesseract_environment/test/tesseract_environment_unit.cpp b/tesseract_environment/test/tesseract_environment_unit.cpp
index 3873ee8920..adb9bc4d01 100644
--- a/tesseract_environment/test/tesseract_environment_unit.cpp
+++ b/tesseract_environment/test/tesseract_environment_unit.cpp
@@ -905,29 +905,6 @@ void runAddSceneGraphCommandTest(bool use_command = false)
   EXPECT_TRUE(env->getCurrentState()->joints.find("provided_subgraph_joint") == env->getCurrentState()->joints.end());
 }
 
-template <typename S>
-void runChangeDefaultContactMarginCommandTest()
-{
-  // Get the environment
-  auto env = getEnvironment<S>();
-  EXPECT_EQ(env->getRevision(), 2);
-  EXPECT_EQ(env->getCommandHistory().size(), 2);
-  EXPECT_NEAR(env->getDiscreteContactManager()->getCollisionMarginData().getDefaultCollisionMargin(), 0.0, 1e-6);
-  EXPECT_NEAR(env->getContinuousContactManager()->getCollisionMarginData().getDefaultCollisionMargin(), 0.0, 1e-6);
-
-  auto cmd = std::make_shared<ChangeDefaultContactMarginCommand>(0.1);
-  EXPECT_TRUE(cmd != nullptr);
-  EXPECT_EQ(cmd->getType(), CommandType::CHANGE_DEFAULT_CONTACT_MARGIN);
-  EXPECT_NEAR(cmd->getDefaultCollisionMargin(), 0.1, 1e-6);
-  EXPECT_TRUE(env->applyCommand(cmd));
-
-  EXPECT_EQ(env->getRevision(), 3);
-  EXPECT_EQ(env->getCommandHistory().size(), 3);
-  EXPECT_EQ(env->getCommandHistory().back(), cmd);
-  EXPECT_NEAR(env->getDiscreteContactManager()->getCollisionMarginData().getDefaultCollisionMargin(), 0.1, 1e-6);
-  EXPECT_NEAR(env->getContinuousContactManager()->getCollisionMarginData().getDefaultCollisionMargin(), 0.1, 1e-6);
-}
-
 template <typename S>
 void runChangeJointLimitsCommandTest(bool use_command = false)
 {
@@ -1280,47 +1257,6 @@ void runChangeLinkVisibilityCommandTest(bool use_command = false)
   EXPECT_FALSE(env->getSceneGraph()->getLinkVisibility(link_name));
 }
 
-template <typename S>
-void runChangePairContactMarginCommandTest()
-{
-  std::string link_name1 = "link_1";
-  std::string link_name2 = "link_2";
-  double margin = 0.1;
-
-  // Get the environment
-  auto env = getEnvironment<S>();
-  EXPECT_EQ(env->getRevision(), 2);
-  EXPECT_EQ(env->getCommandHistory().size(), 2);
-  EXPECT_NEAR(env->getDiscreteContactManager()->getCollisionMarginData().getPairCollisionMargin(link_name1, link_name2),
-              0.0,
-              1e-6);
-  EXPECT_NEAR(
-      env->getContinuousContactManager()->getCollisionMarginData().getPairCollisionMargin(link_name1, link_name2),
-      0.0,
-      1e-6);
-
-  std::unordered_map<tesseract_common::LinkNamesPair, double, tesseract_common::PairHash> link_pair_margin;
-  auto ordered_pair = tesseract_common::makeOrderedLinkPair(link_name1, link_name2);
-  link_pair_margin[ordered_pair] = margin;
-  auto cmd = std::make_shared<ChangePairContactMarginCommand>(link_pair_margin);
-  EXPECT_TRUE(cmd != nullptr);
-  EXPECT_EQ(cmd->getType(), CommandType::CHANGE_PAIR_CONTACT_MARGIN);
-  EXPECT_EQ(cmd->getPairCollisionMarginData().size(), 1);
-  EXPECT_NEAR(cmd->getPairCollisionMarginData().at(ordered_pair), margin, 1e-6);
-  EXPECT_TRUE(env->applyCommand(cmd));
-
-  EXPECT_EQ(env->getRevision(), 3);
-  EXPECT_EQ(env->getCommandHistory().size(), 3);
-  EXPECT_EQ(env->getCommandHistory().back(), cmd);
-  EXPECT_NEAR(env->getDiscreteContactManager()->getCollisionMarginData().getPairCollisionMargin(link_name1, link_name2),
-              margin,
-              1e-6);
-  EXPECT_NEAR(
-      env->getContinuousContactManager()->getCollisionMarginData().getPairCollisionMargin(link_name1, link_name2),
-      margin,
-      1e-6);
-}
-
 template <typename S>
 void runChangeCollisionMarginsCommandTest()
 {
@@ -2513,12 +2449,6 @@ TEST(TesseractEnvironmentUnit, EnvAddSceneGraphCommandUnit)  // NOLINT
   runAddSceneGraphCommandTest<OFKTStateSolver>(true);
 }
 
-TEST(TesseractEnvironmentUnit, EnvChangeDefaultContactMarginCommandUnit)  // NOLINT
-{
-  runChangeDefaultContactMarginCommandTest<KDLStateSolver>();
-  runChangeDefaultContactMarginCommandTest<OFKTStateSolver>();
-}
-
 TEST(TesseractEnvironmentUnit, EnvChangeCollisionMarginsCommandUnit)  // NOLINT
 {
   runChangeCollisionMarginsCommandTest<KDLStateSolver>();
@@ -2567,12 +2497,6 @@ TEST(TesseractEnvironmentUnit, EnvChangeLinkVisibilityCommandUnit)  // NOLINT
   runChangeLinkVisibilityCommandTest<OFKTStateSolver>(true);
 }
 
-TEST(TesseractEnvironmentUnit, EnvChangePairContactMarginCommandUnit)  // NOLINT
-{
-  runChangePairContactMarginCommandTest<KDLStateSolver>();
-  runChangePairContactMarginCommandTest<OFKTStateSolver>();
-}
-
 TEST(TesseractEnvironmentUnit, EnvMoveJointCommandUnit)  // NOLINT
 {
   runMoveJointCommandTest<KDLStateSolver>();
diff --git a/tesseract_urdf/CMakeLists.txt b/tesseract_urdf/CMakeLists.txt
index 903d8bfdb6..dd0da24d1f 100644
--- a/tesseract_urdf/CMakeLists.txt
+++ b/tesseract_urdf/CMakeLists.txt
@@ -3,7 +3,7 @@ cmake_minimum_required(VERSION 3.5.0)
 # Extract package name and version
 find_package(ros_industrial_cmake_boilerplate REQUIRED)
 extract_package_metadata(pkg)
-project(${pkg_extracted_name} VERSION ${pkg_extracted_version} LANGUAGES CXX)
+project(${pkg_extracted_name} VERSION ${pkg_extracted_version} LANGUAGES CXX C)
 
 if(WIN32)
   set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
@@ -12,6 +12,7 @@ endif()
 find_package(Boost REQUIRED)
 find_package(Eigen3 REQUIRED)
 find_package(console_bridge REQUIRED)
+find_package(vtk REQUIRED)
 find_package(PCL REQUIRED)
 find_package(tesseract_geometry REQUIRED)
 find_package(tesseract_common REQUIRED)
diff --git a/tesseract_visualization/CMakeLists.txt b/tesseract_visualization/CMakeLists.txt
index 44ea6477d5..f664e01b44 100644
--- a/tesseract_visualization/CMakeLists.txt
+++ b/tesseract_visualization/CMakeLists.txt
@@ -3,7 +3,7 @@ cmake_minimum_required(VERSION 3.5.0)
 # Extract package name and version
 find_package(ros_industrial_cmake_boilerplate REQUIRED)
 extract_package_metadata(pkg)
-project(${pkg_extracted_name} VERSION ${pkg_extracted_version} LANGUAGES CXX)
+project(${pkg_extracted_name} VERSION ${pkg_extracted_version} LANGUAGES CXX C)
 
 if(WIN32)
   set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
@@ -166,7 +166,7 @@ else()
   if(NOT ignition-math6-eigen3_FOUND)
     list(APPEND IGNITION_MISSING "ignition-math6-eigen3")
   endif()
-  message(WARNING "Ignition Visualization Library will not be built! Missing: ${IGNITION_MISSING}")
+  message(STATUS "Ignition Visualization Library will not be built! Missing: ${IGNITION_MISSING}")
 endif()
 
 configure_package(NAMESPACE tesseract TARGETS ${PACKAGE_LIBRARIES})
